---
import "~/styles/index.css";
import { Footer, Header, WaveDivider } from "~/components";
import { paths } from "~/data";

export interface Props {
  title: string;
  home?: boolean;
}

const { title, home = false } = Astro.props;
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600;700&display=swap");
    </style>
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class='overflow-x-clip'>
    {
      home && (
        <div class='absolute left-0 top-[10vh] -z-10 w-full'>
          <WaveDivider
            waveLayers={paths.headerDiagonal}
            viewBox='0 0 1000 650'
          />
        </div>
      )
    }
    <Header client:load />
    {
      !home && (
        <div class='-mb-40'>
          <div class='bg-primary-800 h-12'>&nbsp;</div>
          <WaveDivider waveLayers={paths.headerHorizontal} />
        </div>
      )
    }
    <slot />
    <Footer />
    <script>
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            entry.target.classList.toggle("show", entry.isIntersecting);
            if (entry.isIntersecting) observer.unobserve(entry.target);
          });
        },
        { threshold: 0 }
      );

      const hiddenLeft = document.querySelectorAll(".hide-left");
      hiddenLeft.forEach((el) => observer.observe(el));

      const hiddenRight = document.querySelectorAll(".hide-right");
      hiddenRight.forEach((el) => observer.observe(el));

      const hiddenBottom = document.querySelectorAll(".hide-bottom");
      hiddenBottom.forEach((el) => observer.observe(el));
    </script>
  </body>
</html>
